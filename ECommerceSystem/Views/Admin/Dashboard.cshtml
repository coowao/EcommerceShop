@model ECommerceSystem.Models.StatisticViewModel

@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "_AdminLayout";
}

<div class="dashboard">
    <h2>Thống Kê</h2>
    <div class="stats">
        <select id="statType" onchange="loadStats()">
            <option value="revenue">Doanh thu</option>
            <option value="orders">Đơn hàng</option>
            <option value="top-products">Sản phẩm bán chạy</option>
        </select>
        <select id="statPeriod" onchange="loadStats()">
            <option value="day">Ngày</option>
            <option value="month">Tháng</option>
            <option value="year">Năm</option>
        </select>
        <canvas id="statsChart"></canvas>
    </div>
    <div class="inventory">
        <h3>Cảnh báo tồn kho</h3>
        <ul>
            @foreach (var item in Model.LowStock)
            {
                <li>@item.Name - Số lượng: @item.Stock</li>
            }
        </ul>
    </div>
    <div class="activity">
        <h3>Hoạt động người dùng</h3>
        <ul>
            @foreach (var act in Model.Activities)
            {
                <li>@act.Action: @act.Count lần</li>
            }
        </ul>
    </div>
</div>

@section Scripts {
    <script src="~/js/chart.js"></script>
    <script>
        async function loadStats() {
            const type = document.getElementById('statType').value;
            const period = document.getElementById('statPeriod').value;
            const response = await fetch(`/api/admin/statistics?type=${type}&period=${period}`);
            const data = await response.json();
            const ctx = document.getElementById('statsChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.Revenue?.map(r => r.Date) || data.OrderCount?.map(r => r.Status) || data.TopProducts?.map(r => r.Name),
                    datasets: [{
                        label: type,
                        data: data.Revenue?.map(r => r.Value) || data.OrderCount?.map(r => r.Count) || data.TopProducts?.map(r => r.Quantity),
                        backgroundColor: 'rgba(75, 192, 192, 0.2)'
                    }]
                }
            });
        }
        loadStats();
    </script>
}